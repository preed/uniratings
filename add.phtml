<?php
/*
 * The contents of this file are subject to the Jabber Open Source License 
 * Version 1.0 (the "License").  You may not copy or use this file, in either 
 * source code or executable form, except in compliance with the License.  You 
 * may obtain a copy of the License at http://www.jabber.com/license/ or at 
 * http://www.opensource.org/.
 * 
 * Read the LICENSE file included with the source distribution for more
 * information.
 *
 * Software distributed under the License is distributed on an "AS IS" basis, 
 * WITHOUT WARRANTY OF ANY KIND, either express or implied.  See the License 
 * for the specific language governing rights and limitations under the 
 * License.
 *
 * Copyrights:
 *
 * Portions created by or assigned to Polyratings.com are Copyright (c) 
 * 1999-2002 Polyratings.com.  All Rights Reserved.  Contact information for 
 * Polyratings.com, is available at http://www.polyratings.com/.
 *
 * Portions Copyright (c) 1999-2002 Forrest Lanning
 *                        2001-2002 J. Paul Reed
 *
 * Contributor(s):  
 *
 */

include_once('php/Constants.php');
include_once(PHP_ROOT . 'UIHandle.php');
include_once(PHP_ROOT . 'DBConnection.php'); 
include_once(PHP_ROOT . 'DBInterfaceLib.php'); 

$output = new UIHandle();

if (isset($_REQUEST['haveProfInfo'])) {
   $proflname = $_REQUEST['proflname'];
   $proffname = $_REQUEST['proffname'];
   $profdept = $_REQUEST['profdept'];

   $proflname = trim($proflname);
   $proffname = trim($proffname);

   if (strlen($proflname) > MAX_LNAME_LEN) {
      $output->ErrorPage("Professor last name length limit");
      exit;
   }
   else if (strlen($proffname) > MAX_FNAME_LEN) {
      $output->ErrorPage("Professor first name length limit");
      exit;
   }
   else if (! preg_match("/^\d+$/", $profdept)) {
      $output->ErrorPage("Professor Dept ID err");
      exit;
   }
   else if (preg_match("/^\s*$/", $proflname) || 
    preg_match("/^\s*$/", $proffname)) {
      $output->ErrorPage("Missing first/last professor name"); 
      exit;
   }

   $dbHandle = GetCachedDBConnection(); 

   $proflname = $dbHandle->Quote($proflname);
   $proffname = $dbHandle->Quote($proffname);

   if ($dbHandle->DoOp("SELECT profid FROM or_professor WHERE lname='$proflname'
    AND fname='$proffname' AND deptid=$profdept AND status NOT IN ('deleted',
    'rejected')") != 0) {
      $output->ErrorPage("Duplicate Professor name in same department");
      exit;
   }

   if ($dbHandle->DoOp("SELECT name FROM or_dept WHERE deptid=$profdept") 
    != 1) {
      $output->ErrorPage("Invalid Professor department");
      exit;
   }

   $transID = $dbHandle->BeginTransaction('professor-new');

   $objID = $dbHandle->GetObjectID();

   if ($dbHandle->DoOp("INSERT INTO or_professor (fname, lname, deptid, 
    objectid) VALUES ('$proffname', '$proflname', $profdept, $objID)") != 1) {
      $output->ErrorPage("Professor CREAT() failed");
      exit;
   }

   $newProfID = $dbHandle->LastInsertID();

   $dbHandle->EndTransaction();

   header("Location: " . ENTEREVAL_URL . "?profid=$newProfID");
}
else if (isset($_REQUEST['haveinfo'])) {
   $output->PutValue('departments', GetDepartmentInfo());
   $output->PrintPage('addCollectInfo');
}
else if (isset($_REQUEST['dimwit'])) {
   $output->PrintPage('addRepeatInstructions');
}
else {
   $output->PrintPage('add');
}

?>
